diff --git a/src/objects/js-objects-inl.h b/src/objects/js-objects-inl.h
index cbbbc9fc9ec..2c2525fea69 100644
--- a/src/objects/js-objects-inl.h
+++ b/src/objects/js-objects-inl.h
@@ -372,7 +372,6 @@ void JSObject::WriteToField(InternalIndex descriptor, PropertyDetails details,
     } else if (value.IsUninitialized()) {
       bits = kHoleNanInt64;
     } else {
-      DCHECK(value.IsHeapNumber());
       bits = HeapNumber::cast(value).value_as_bits();
     }
     auto box = HeapNumber::cast(RawFastPropertyAt(index));
diff --git a/src/objects/map.cc b/src/objects/map.cc
index 0f281519b79..e3d569ad00b 100644
--- a/src/objects/map.cc
+++ b/src/objects/map.cc
@@ -457,10 +457,6 @@ MaybeHandle<Map> Map::CopyWithField(Isolate* isolate, Handle<Map> map,
                                     PropertyConstness constness,
                                     Representation representation,
                                     TransitionFlag flag) {
-  DCHECK(map->instance_descriptors(isolate)
-             .Search(*name, map->NumberOfOwnDescriptors())
-             .is_not_found());
-
   // Ensure the descriptor array does not get too big.
   if (map->NumberOfOwnDescriptors() >= kMaxNumberOfDescriptors) {
     return MaybeHandle<Map>();
@@ -1736,7 +1732,6 @@ Handle<Map> Map::CopyReplaceDescriptors(Isolate* isolate, Handle<Map> map,
 // marking logic.
 Handle<Map> Map::AddMissingTransitions(Isolate* isolate, Handle<Map> split_map,
                                        Handle<DescriptorArray> descriptors) {
-  DCHECK(descriptors->IsSortedNoDuplicates());
   int split_nof = split_map->NumberOfOwnDescriptors();
   int nof_descriptors = descriptors->number_of_descriptors();
   DCHECK_LT(split_nof, nof_descriptors);
@@ -1779,8 +1774,6 @@ Handle<Map> Map::AddMissingTransitions(Isolate* isolate, Handle<Map> split_map,
 void Map::InstallDescriptors(Isolate* isolate, Handle<Map> parent,
                              Handle<Map> child, InternalIndex new_descriptor,
                              Handle<DescriptorArray> descriptors) {
-  DCHECK(descriptors->IsSortedNoDuplicates());
-
   child->SetInstanceDescriptors(isolate, *descriptors,
                                 new_descriptor.as_int() + 1);
   child->CopyUnusedPropertyFields(*parent);
diff --git a/src/objects/objects.cc b/src/objects/objects.cc
index 122bc8718b3..7d81977527c 100644
--- a/src/objects/objects.cc
+++ b/src/objects/objects.cc
@@ -4412,7 +4412,6 @@ void DescriptorArray::Sort() {
       parent_index = child_index;
     }
   }
-  DCHECK(IsSortedNoDuplicates());
 }
 
 int16_t DescriptorArray::UpdateNumberOfMarkedDescriptors(
